// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PtoManagement.Infrasturcture.Data;

namespace PtoManagement.Infrasturcture.Data.Migrations
{
    [DbContext(typeof(PtoManagementDbContext))]
    [Migration("20200204084542_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PtoManagement.Core.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("TotalAccrued")
                        .HasColumnType("int");

                    b.Property<int>("TotalUsed")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees","Pto");
                });

            modelBuilder.Entity("PtoManagement.Core.Models.EmployeeType", b =>
                {
                    b.Property<int>("EmployeeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeTypeId");

                    b.ToTable("EmployeeTypes","Lookup");

                    b.HasData(
                        new
                        {
                            EmployeeTypeId = 1,
                            EmployeeTypeName = "User"
                        },
                        new
                        {
                            EmployeeTypeId = 2,
                            EmployeeTypeName = "Manager"
                        },
                        new
                        {
                            EmployeeTypeId = 3,
                            EmployeeTypeName = "Admin"
                        });
                });

            modelBuilder.Entity("PtoManagement.Core.Models.Pto", b =>
                {
                    b.Property<int>("PtoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateFiled")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LeaveEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LeaveStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PtoStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PtoTypeId")
                        .HasColumnType("int");

                    b.HasKey("PtoId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PtoStatusId");

                    b.HasIndex("PtoTypeId");

                    b.ToTable("Ptos","Pto");
                });

            modelBuilder.Entity("PtoManagement.Core.Models.PtoStatus", b =>
                {
                    b.Property<int>("PtoStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PtoStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PtoStatusId");

                    b.ToTable("PtoStatus","Lookup");

                    b.HasData(
                        new
                        {
                            PtoStatusId = 1,
                            PtoStatusName = "For Approval"
                        },
                        new
                        {
                            PtoStatusId = 2,
                            PtoStatusName = "Approved"
                        },
                        new
                        {
                            PtoStatusId = 3,
                            PtoStatusName = "Rejected"
                        },
                        new
                        {
                            PtoStatusId = 4,
                            PtoStatusName = "Cancelled"
                        });
                });

            modelBuilder.Entity("PtoManagement.Core.Models.PtoType", b =>
                {
                    b.Property<int>("PtoTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PtoTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PtoTypeId");

                    b.ToTable("PtoTypes");
                });

            modelBuilder.Entity("PtoManagement.Core.Models.Pto", b =>
                {
                    b.HasOne("PtoManagement.Core.Models.Employee", "Employee")
                        .WithMany("Ptos")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PtoManagement.Core.Models.PtoStatus", "PtoStatus")
                        .WithMany("Ptos")
                        .HasForeignKey("PtoStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PtoManagement.Core.Models.PtoType", "PtoType")
                        .WithMany("Ptos")
                        .HasForeignKey("PtoTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
